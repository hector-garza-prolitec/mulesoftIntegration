<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:businessactivityquery-mule-customer="http://www.mulesoft.org/schema/mule/businessactivityquery-mule-customer" xmlns:erp-bo-customer-svc="http://www.mulesoft.org/schema/mule/erp-bo-customer-svc"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/erp-bo-customer-svc http://www.mulesoft.org/schema/mule/erp-bo-customer-svc/current/mule-erp-bo-customer-svc.xsd
http://www.mulesoft.org/schema/mule/businessactivityquery-mule-customer http://www.mulesoft.org/schema/mule/businessactivityquery-mule-customer/current/mule-businessactivityquery-mule-customer.xsd">
	<flow name="mainFlow" doc:id="cb758a36-c969-49f7-9fd5-8ca0a1e84763" >
		<scheduler doc:name="Scheduler" doc:id="3c308bf4-ac16-4273-a089-263c1020eaf7" >
			<scheduling-strategy >
				<fixed-frequency frequency="1" timeUnit="MINUTES"/>
			</scheduling-strategy>
		</scheduler>
		<ee:transform doc:name="Initialize Vars" doc:id="da88d08a-ba11-40e6-89ef-5924ed63f5b5" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="isBeingReprocessed" ><![CDATA[%dw 2.0
output application/java
---
false]]></ee:set-variable>
				<ee:set-variable variableName="itemsReprocessed" ><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="itemsSucceeded" ><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="itemsFailed" ><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="SFToEpicor" doc:id="b1382382-6f50-4b9d-b9ea-37398a0437c0" name="processQueue"/>
		<flow-ref doc:name="EpicorToSF" doc:id="74ea67b6-3f14-42cf-a4d5-da9ad195d591" name="epicorToSF"/>
	</flow>
	<flow name="onNewRecord" doc:id="d2b5750a-8180-4616-8475-9527b97996df" >
		<salesforce:new-object-listener doc:name="On New Object" doc:id="82688240-f669-477d-ab1c-2a21da24ca7b" config-ref="Salesforce_Config" objectType="Account">
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
		</salesforce:new-object-listener>
		<set-variable value="#[payload]" doc:name="saveResponse" doc:id="a2ff8489-2286-49fa-b9d3-3ae77ee021ec" variableName="sfResponse"/>
		<flow-ref doc:name="getIntegrationUser" doc:id="4e7ddd58-0876-4da4-b7c2-f69969eacb0a" name="getIntegrationUser"/>
		<set-payload value="#[vars.sfResponse]" doc:name="Set Payload" doc:id="92740b9c-a61b-4e51-8129-78504047aa9f" />
		<choice doc:name="Choice" doc:id="c65b8487-43d1-4735-823d-9b0df94ced48" >
			<when expression="#[payload.LastModifiedById != vars.sfUserId]" >
				<flow-ref doc:name="addToQueue" doc:id="d2c44201-9e30-40ba-a764-459d856f7c5a" name="addToQueue" />
			</when>
		</choice>
	</flow>
	<flow name="onModifiedRecord" doc:id="bd29c991-5717-4756-b65b-68dcbf952cb3" >
		<salesforce:modified-object-listener doc:name="On Modified Object" doc:id="dd4c7259-2431-4121-a40d-948b83897968" config-ref="Salesforce_Config" objectType="Account">
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
		</salesforce:modified-object-listener>
		<set-variable value="#[payload]" doc:name="saveResponse" doc:id="73511d59-9622-44a5-a410-bfaf483880fb" variableName="sfResponse" />
		<flow-ref doc:name="getIntegrationUser" doc:id="7799e3ca-158f-454a-b594-4455405c9a22" name="getIntegrationUser" />
		<set-payload value="#[vars.sfResponse]" doc:name="Set Payload" doc:id="f8788476-6043-4ab1-b7f5-dd5ab088c0a7" />
		<choice doc:name="Choice" doc:id="87b9d50a-b351-46ff-87f7-2874873fddee" >
			<when expression="#[payload.LastModifiedById != vars.sfUserId]">
				<flow-ref doc:name="addToQueue" doc:id="0690d376-3ced-40ab-9ece-7a5ce6db4ad4" name="addToQueue"/>
			</when>
		</choice>
	</flow>
	<sub-flow name="getIntegrationUser" doc:id="6a2a57c0-dbee-4e87-b7cd-0ab10c6d79eb" >
		<salesforce:get-user-info doc:name="Get user info" doc:id="b8d52929-93eb-4052-9fa3-09f2cfb3f0db" config-ref="Salesforce_Config" />
		<set-variable value="#[payload.userId]" doc:name="sfUserId" doc:id="dba3f858-ec11-49a7-a228-731d86da379a" variableName="sfUserId"/>
	</sub-flow>
	<sub-flow name="addToQueue" doc:id="5537599e-6b3e-4059-af86-26fbf34e6de6" >
		<choice doc:name="Choice" doc:id="db1b7e46-0f01-4fe3-9180-3b376726aced">
			<when expression="#[!vars.isBeingReprocessed]">
				<vm:publish queueName="accountQueue" doc:name="Publish" doc:id="42eb481f-0326-47c5-8ffc-3c379bf850e8" config-ref="VM_Config" />
			</when>
		</choice>
		<async doc:name="Schedule" doc:id="7382cba1-5cd6-474c-bcc4-e4d0f8a9b5a2" >
			<ee:transform doc:name="Transform Message" doc:id="888a627a-b8a1-44c5-96a5-ce8cca0df939">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
var time = ((now() as LocalDateTime)
    as String { format: "yyyy-MM-dd'T'HH:mm:ss" }
    ++ "Z")
    
output application/json
---
{
	"Company": "PROLITEC",
	"Key1": "Accounts",
	"Key2": "SF->Epicor",
	"Key3": vars.sfResponse.Id as String,
	"Character01": "Scheduled",
	"TriggeredDateTime_c": time,
	"SourceJSON_c": write(vars.sfResponse, 'application/json')
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<http:request method="POST" doc:name="Request" doc:id="b0cd9a08-d4e3-435d-9caa-bb19ecdaf624" config-ref="HTTP_Request_configuration1" path="/PublishQueue" />
			<os:store doc:name="Store" doc:id="223347c5-32dd-4f1f-a7a8-5fa76edd1ad6" key="#[vars.sfResponse.Id]">
			<os:value><![CDATA[#[payload.Key4]]]></os:value>
		</os:store>
		</async>
	</sub-flow>
	<flow name="processQueue" doc:id="849349c1-6991-421d-a2f0-f3489380c3e0" >
		<choice doc:name="Choice" doc:id="6628f4e9-781d-48c6-8f3d-3eeca8b300cd" >
			<when expression="#[!vars.isBeingReprocessed]">
				<vm:consume queueName="accountQueue" doc:name="Consume" doc:id="a2a68bee-f409-48fd-a4d5-30be9c59bd67" config-ref="VM_Config" />
			</when>
			<otherwise >
				<set-payload value="#[vars.sfResponse]" doc:name="Set Payload" doc:id="9f72360c-1ff7-4df2-8056-db8ca4312592" />
			</otherwise>
		</choice>
		<flow-ref doc:name="lookupInEpicor" doc:id="e4b21d5d-2fe8-43d0-ab42-983c8d54e9aa" name="lookupInEpicor" />
		<ee:transform doc:name="Transform Message" doc:id="20235a35-d2ab-4742-8847-93d8c61df69b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  "Company": "Prolitec",
  "CustID": payload.AccountNumber,
  "CustNum": payload.BD_Epicor_ID__c default vars.custNum,
  "Name": payload.Name,
  "TermsCode": payload.BD_Terms__c,
  "SalesForceID_c": payload.Id
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[payload]" doc:name="targetJSON" doc:id="b7af6e3c-8cdc-4ab3-bda7-b3b479639e51" variableName="targetJSON" />
		<erp-bo-customer-svc:newupdateext-customers doc:name="NewUpdateExt_Customers" doc:id="f01e859a-ac11-4e15-b58f-180829d074e6" config-ref="Erp_BO_CustomerSvc_Config" />
		<flow-ref doc:name="returnEpicorID" doc:id="7f199097-59d0-479d-9142-b091ae9e4ec8" name="returnEpicorID" />
		<set-variable value="#[vars.itemsSucceeded as Number + 1]" doc:name="itemsSucceeded" doc:id="4b477291-01ec-48cb-b716-3610331982f8" variableName="itemsSucceeded"/>
		<async doc:name="Processed" doc:id="c062171c-c3bf-44a1-9369-8998fc7654c7">
			<os:retrieve doc:name="Retrieve" doc:id="abe085e8-5db2-4d7a-93cf-7e50e64cdb7f" key="#[vars.sfResponse.Id]" />
			<ee:transform doc:name="" doc:id="354055da-a32a-4d68-b02f-89b99b8a7373">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
var time = ((now() as LocalDateTime)
    as String { format: "yyyy-MM-dd'T'HH:mm:ss" }
    ++ "Z")
    
var Key4 = payload
    
output application/json
---
{
	"Company": "PROLITEC",
	"Key1": "Accounts",
	"Key2": "SF->Epicor",
	"Key3": vars.sfResponse.Id as String,
	"Key4": Key4 as String,
	"Character01": "Processed",
	"ProcessedDateTime_c": time,
	"TargetJSON_c": write(vars.targetJSON, 'application/json')
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<http:request method="POST" doc:name="Request" doc:id="bfaf1c44-72f6-4596-9816-68bade2acfaa" config-ref="HTTP_Request_configuration1" path="/PublishQueue" />
			<os:remove doc:name="Remove" doc:id="e540c545-4466-4d1b-b0e6-6a68c6911574" key="#[vars.sfResponse.Id]"/>
		</async>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="false" doc:name="On Error Continue" doc:id="4d4d4d2a-6526-4ae3-a2a5-a12ade558f2e" type="VM:EMPTY_QUEUE">
				<logger level="INFO" doc:name="Logger" doc:id="73155340-fc08-4c5e-8455-5859aeba5446" message="No messages in queue"/>
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="14fe9296-46e7-4939-8bb0-2267b8a73de0" type="ERP-BO-CUSTOMER-SVC:BAD_REQUEST, ERP-BO-CUSTOMER-SVC:CONNECTIVITY, ERP-BO-CUSTOMER-SVC:FORBIDDEN, ERP-BO-CUSTOMER-SVC:INTERNAL_SERVER_ERROR, ERP-BO-CUSTOMER-SVC:METHOD_NOT_ALLOWED, ERP-BO-CUSTOMER-SVC:NOT_ACCEPTABLE, ERP-BO-CUSTOMER-SVC:NOT_FOUND, ERP-BO-CUSTOMER-SVC:PARSING, ERP-BO-CUSTOMER-SVC:RETRY_EXHAUSTED, ERP-BO-CUSTOMER-SVC:SECURITY, ERP-BO-CUSTOMER-SVC:SERVICE_UNAVAILABLE, ERP-BO-CUSTOMER-SVC:TIMEOUT, ERP-BO-CUSTOMER-SVC:TOO_MANY_REQUESTS, ERP-BO-CUSTOMER-SVC:UNAUTHORIZED, ERP-BO-CUSTOMER-SVC:UNSUPPORTED_MEDIA_TYPE">
				<set-variable value="#[vars.itemsFailed as Number + 1]" doc:name="itemsFailed" doc:id="c735976b-b264-46cf-8261-744e641804e4" variableName="itemsFailed" />
				<async doc:name="Failed" doc:id="a7d7f137-41bd-4a11-b906-8023839f9936" >
					<os:retrieve doc:name="Retrieve" doc:id="3c22473a-48a3-4236-8a72-dd6d4fd6ed73" key="#[vars.sfResponse.Id]" />
					<ee:transform doc:name="" doc:id="bb9256dc-0561-443a-a524-01abb1977a29" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
var time = ((now() as LocalDateTime)
    as String { format: "yyyy-MM-dd'T'HH:mm:ss" }
    ++ "Z")
    
var Key4 = payload
    
output application/json
---
{
	"Company": "PROLITEC",
	"Key1": "Accounts",
	"Key2": "SF->Epicor",
	"Key3": vars.sfResponse.Id as String,
	"Key4": Key4 as String,
	"Character01": "Failed",
	"ProcessedDateTime_c": time,
	"LogMessages_c": write(error.errorMessage.payload, 'application/json'),
	"TargetJSON_c": write(vars.targetJSON, 'application/json')
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<http:request method="POST" doc:name="Request" doc:id="b664c728-b373-4f01-96a4-3bf23bffc4d4" config-ref="HTTP_Request_configuration1" path="/PublishQueue" />
					<os:remove doc:name="Remove" doc:id="40981c0b-2ecc-40db-b2b3-a5cf76740ed8" key="#[vars.sfResponse.Id]" />
				</async>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="returnEpicorID" doc:id="eb8945b2-56fa-47cc-ad20-4a3289151bb8" >
		<ee:transform doc:name="Transform Message" doc:id="b2dd5f71-f7fc-4777-ab41-f26cef902c15" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	Id: vars.sfResponse.Id,
	BD_Epicor_ID__c: payload.CustNum
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:update type="Account" doc:name="Update" doc:id="5014745f-354b-4768-827a-eec1b9f0b57f" config-ref="Salesforce_Config"/>
	</flow>
	<flow name="lookupInEpicor" doc:id="afb1c3ee-daf9-4e15-bc18-019b800cce46" >
		<erp-bo-customer-svc:getrows-customers doc:name="GetRows_Customers" doc:id="4f86f59d-7512-4b1f-a88a-75c5d6add33b" config-ref="Erp_BO_CustomerSvc_Config" select="CustNum, CustID" filter="#[&quot;CustID eq '&quot; ++ vars.sfResponse.AccountNumber as String ++ &quot;'&quot;]"/>
		<choice doc:name="Choice" doc:id="6a459f61-1e44-4749-a72a-31da1d3049c1" >
			<when expression="#[sizeOf(payload.value) &gt; 0]">
				<set-variable value="#[payload.value[0].CustNum]" doc:name="custNum" doc:id="eaec290a-546f-478a-9462-d1abced1f4f5" variableName="custNum" />
			</when>
			<otherwise >
				<set-variable doc:name="custNum" doc:id="b61c42a3-0f0a-42a2-9322-df2ef4c1b68a" variableName="custNum" value="#[0]"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="lookupInSF" doc:id="51f6e746-fcab-448b-be92-a37e80c5462e" >
		<salesforce:query doc:name="Query" doc:id="1113f896-2e3c-4aac-8183-f5cd98aed227" config-ref="Salesforce_Config">
			<salesforce:salesforce-query ><![CDATA[Select Id, BD_Epicor_ID__c, AccountNumber FROM Account WHERE AccountNumber = :acct]]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	acct : "'" ++ vars.epicorResponse.Customer_CustID ++ "'"
}]]]></salesforce:parameters>
		</salesforce:query>
		<choice doc:name="Choice" doc:id="25dbff0d-6694-491e-9dba-ff394513f392" >
			<when expression="#[payload != null]" >
				<set-variable value="#[payload[0].Id]" doc:name="sfID" doc:id="891b0d96-e8dc-4078-847f-0d68f5af6c4e" variableName="sfID" />
			</when>
			<otherwise >
				<set-variable value='#[""]' doc:name="sfID" doc:id="cbd36b4c-4125-4aad-9f54-9cd19886cc7d" variableName="sfID" />
			</otherwise>
		</choice>
	</flow>
	<sub-flow name="epicorToSF" doc:id="9e6a445a-b2ab-4d0f-b471-305bc4e7f3eb" >
		<ee:transform doc:name="Initialize Variables" doc:id="3278e6c3-a958-4aa1-95bf-4c9bb7f5eb8c" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="records" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="badRecords" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="sfIDs" ><![CDATA[%dw 2.0
output application/java
---
""]]></ee:set-variable>
				<ee:set-variable variableName="successRecords" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="getEpicorRecords" doc:id="be0036b8-7583-4079-8645-752aa1ea73ca" name="getEpicorRecords"/>
		<salesforce:upsert doc:name="Upsert" doc:id="67690e39-1edc-49a5-8cb8-ee10f8d284f2" config-ref="Salesforce_Config" objectType="Account" externalIdFieldName="BD_Epicor_ID__c">
			<salesforce:records><![CDATA[#[vars.records]]]></salesforce:records>
		</salesforce:upsert>
		<ee:transform doc:name="Transform Message" doc:id="8fa9efc7-c810-4e4e-be9d-7b1faa3a5ff8">
			<ee:message>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="sfIDs" ><![CDATA[%dw 2.0
output application/java
---
payload.items
  filter ((item) -> item.successful)
  map ((item) -> "'" ++ item.id as String ++ "'")
  joinBy(",")]]></ee:set-variable>
				<ee:set-variable variableName="successRecords" ><![CDATA[%dw 2.0

var response = payload.items
var successItems = response filter ((res) -> res.successful)

var successRecords = vars.records filter((reg) -> 
	(successItems map (x) -> x.payload.id) contains reg.Id
)

output application/json
---
successRecords
    ]]></ee:set-variable>
				<ee:set-variable variableName="badRecords" ><![CDATA[%dw 2.0

var response = payload.items
var failedItems = response filter ((res) -> res.successful == false)

var failedRecords = vars.records filter((reg) -> 
	(failedItems map (x) -> x.payload.id) contains reg.Id
)

output application/json
---

failedRecords map (x) -> {
	(x), 
	"ErrorMessage" : ((failedItems filter (f) -> f.payload.id == x.Id) 
						map (err) -> err.message)
						joinBy(";")
	
}
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<scatter-gather doc:name="Scatter-Gather" doc:id="bbab983b-6d2b-4128-97bc-5b35add2ca0a" >
			<route >
				<choice doc:name="Choice" doc:id="8e1e30e1-5770-4263-939d-9081de9fe3e8">
			<when expression="#[vars.sfIDs != null]">
						<salesforce:query doc:name="Get SF Records" doc:id="dea0c4dd-f2ce-419f-a084-17094e1744ae" config-ref="Salesforce_Config">
							<salesforce:salesforce-query ><![CDATA[Select Id, BD_Epicor_ID__c FROM Account WHERE Id IN(:ids)]]></salesforce:salesforce-query>
							<salesforce:parameters ><![CDATA[#[output application/java
---
{
	ids : vars.sfIDs
}]]]></salesforce:parameters>
						</salesforce:query>
						<ee:transform doc:name="Transform Message" doc:id="9d885e0c-ea50-4aa0-beb3-aa0d079617e2">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload 
    map ((item) -> {
    	"Company": "Prolitec",
        "CustNum": item.BD_Epicor_ID__c,
        "SalesForceID_c": item.Id
    })]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<erp-bo-customer-svc:newupdateext-customers doc:name="NewUpdateExt_Customers" doc:id="1fa6d382-b257-4474-8746-dfb4cb6c9e86" config-ref="Erp_BO_CustomerSvc_Config"/>
						<async doc:name="Processed" doc:id="cc1fe12c-0b3f-4fbb-9ad5-24cb0e903133">
							<foreach doc:name="For Each" doc:id="4ba52e69-519f-4bad-8865-fcffc6e791bb" collection="#[vars.successRecords]">
								<set-variable value="#[payload]" doc:name="successRecord" doc:id="1fb54452-6258-49a8-b993-435deb716299" variableName="successRecord" />
								<os:retrieve doc:name="Retrieve" doc:id="1b7cd67f-5e55-478b-ad43-198bf201b186" key="#[vars.successRecord.BD_Epicor_ID__c]" />
								<ee:transform doc:name="" doc:id="99e808e9-f99a-44d1-8d1a-d5105edd9198">
								<ee:message>
									<ee:set-payload><![CDATA[%dw 2.0
var time = ((now() as LocalDateTime)
    as String { format: "yyyy-MM-dd'T'HH:mm:ss" }
    ++ "Z")
    
var Key4 = payload
    
output application/json
---
{
	"Company": "PROLITEC",
	"Key1": "Accounts",
	"Key2": "Epicor->SF",
	"Key3": vars.successRecord.BD_Epicor_ID__c as String,
	"Key4": Key4 as String,
	"Character01": "Processed",
	"ProcessedDateTime_c": time,
	"TargetJSON_c": write(vars.successRecord, 'application/json')
}]]></ee:set-payload>
								</ee:message>
							</ee:transform>
								<http:request method="POST" doc:name="Request" doc:id="9ea55736-0ed8-4b97-b3c9-39acae6755b4" config-ref="HTTP_Request_configuration1" path="/PublishQueue" />
								<os:remove doc:name="Remove" doc:id="240f8f7b-9478-45d8-81fc-b47d07a90344" key="#[vars.successRecord.BD_Epicor_ID__c]"/>
						</foreach>
						</async>
					</when>
		</choice>
			</route>
			<route >
				<choice doc:name="Choice" doc:id="aa74c786-0c16-4bba-8f97-59e4f84622b5">
			<when expression="#[!isEmpty(vars.badRecords)]">
						<async doc:name="Failed" doc:id="1c2a615a-718e-4101-9364-2bf32b61b59d" >
							<foreach doc:name="For Each" doc:id="5a968255-c29c-43f7-9d98-e7a631f4e696" collection="#[vars.badRecords]" >
								<set-variable value="#[payload]" doc:name="failedRecord" doc:id="edd315bc-6bc0-4ab3-a6e6-2dab54fb450d" variableName="failedRecord" />
								<os:retrieve doc:name="Retrieve" doc:id="67e951fb-4960-49b4-9a6a-a36edbfd41ed" key="#[vars.failedRecord.BD_Epicor_ID__c]" />
								<ee:transform doc:name="" doc:id="362f9d48-5c7a-4ad7-9abd-7f5f0c0b1004" >
									<ee:message >
										<ee:set-payload ><![CDATA[%dw 2.0
var time = ((now() as LocalDateTime)
    as String { format: "yyyy-MM-dd'T'HH:mm:ss" }
    ++ "Z")
    
var Key4 = payload
    
output application/json
---
{
	"Company": "PROLITEC",
	"Key1": "Accounts",
	"Key2": "Epicor->SF",
	"Key3": vars.failedRecord.BD_Epicor_ID__c as String,
	"Key4": Key4 as String,
	"Character01": "Failed",
	"ProcessedDateTime_c": time,
	"LogMessages_c": vars.failedRecord.ErrorMessage,
	"TargetJSON_c": write(vars.failedRecord, 'application/json')
}]]></ee:set-payload>
									</ee:message>
								</ee:transform>
								<http:request method="POST" doc:name="Request" doc:id="dde29506-0aa1-4479-8c09-6dd311f080c1" config-ref="HTTP_Request_configuration1" path="/PublishQueue" />
								<os:remove doc:name="Remove" doc:id="09ee5f84-2db5-4d53-b4f5-f01a4709ae92" key="#[vars.failedRecord.BD_Epicor_ID__c]" />
							</foreach>
						</async>
					</when>
		</choice>
			</route>
		</scatter-gather>
	</sub-flow>
	<sub-flow name="getEpicorRecords" doc:id="69590a58-e8fc-4458-9e1c-8e5d201cc90b" >
		<set-variable value="#[[]]" doc:name="Set Variable" doc:id="71881485-7ea5-40c3-ac62-5535f616d46b" variableName="records"/>
		<businessactivityquery-mule-customer:execute doc:name="Execute" doc:id="34baed77-2ce0-4f07-b7cb-95bb1103dce9" config-ref="Business_activity_query__Mule_Customer__Config" x-api-key="${epicorAPIKey}" top="${odata.Top}" count="true" filter="#[&quot;Customer_ChangedBy ne '&quot; ++ Mule::p(&quot;secure::epicorUserName&quot;) as String ++ &quot;'&quot;]"/>
		<foreach doc:name="For Each" doc:id="4a86c56d-3fb9-4701-a959-914be8310665" collection="#[payload.value]">
			<set-variable value="#[payload]" doc:name="epicorResponse" doc:id="331510a1-9653-4fc4-a015-b5127c55e119" variableName="epicorResponse"/>
			<flow-ref doc:name="lookupInSF" doc:id="c2d8c02c-a495-4900-a524-fdfce7a3e5d2" name="lookupInSF"/>
			<ee:transform doc:name="Transform Message" doc:id="9e27fa5f-2cff-4d37-8e3c-3a2b7d2f2eba">
			<ee:message>
			</ee:message>
				<ee:variables >
					<ee:set-variable variableName="records" ><![CDATA[%dw 2.0

var forceId = Mule::p("forceSyncIDs") as Boolean

var id = if(forceId) "" else payload.Customer_SalesForceID_c

output application/json
---
vars.records ++ [
	"Id": id,
    "Name": payload.Customer_Name,
    "AccountNumber": payload.Customer_CustID,
    "BD_Epicor_ID__c": payload.Customer_CustNum,
    "BD_Terms__c": payload.Customer_TermsCode
]
]]></ee:set-variable>
				</ee:variables>
		</ee:transform>
			<async doc:name="Schedule" doc:id="27a12cec-602f-47f2-8979-9109678f280e" >
				<ee:transform doc:name="Transform Message" doc:id="34d405df-3291-4677-bb10-9c92ecec45c9" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
var time = ((now() as LocalDateTime)
    as String { format: "yyyy-MM-dd'T'HH:mm:ss" }
    ++ "Z")
    
output application/json
---
{
	"Company": "PROLITEC",
	"Key1": "Accounts",
	"Key2": "Epicor->SF",
	"Key3": vars.epicorResponse.Customer_CustNum as String,
	"Character01": "Scheduled",
	"TriggeredDateTime_c": time,
	"SourceJSON_c": write(vars.epicorResponse, 'application/json')
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="POST" doc:name="Request" doc:id="9774a0dc-d54e-4b6e-8ae0-288d8882904f" config-ref="HTTP_Request_configuration1" path="/PublishQueue" />
				<os:store doc:name="Store" doc:id="e730e763-e044-433a-bb37-fc8026ad95df" key="#[vars.epicorResponse.Customer_CustNum]" >
					<os:value ><![CDATA[#[payload.Key4]]]></os:value>
				</os:store>
			</async>
		</foreach>
	</sub-flow>
	<flow name="reprocess-SFToEpicor" doc:id="954ccbbe-f4bc-4ecd-9fe9-04864e86fd03" >
		<http:listener doc:name="Listener" doc:id="22efc062-5968-46cb-a0f8-6d99ec97e6da" config-ref="HTTP_Listener_config_2" path="/reprocess/SF_Epicor"/>
		<set-variable value="#[true]" doc:name="isBeingReprocessed" doc:id="21b3464c-7ed0-4ce9-8fa9-415ffc6f693c" variableName="isBeingReprocessed"/>
		<ee:transform doc:name="Initialize Vars" doc:id="d409e15c-0cf5-4b45-91e2-2f30e112f19a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
var ids = attributes.queryParams

output application/json
---
ids.accountId splitBy(',')
]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="itemsReprocessed" ><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="itemsSucceeded" ><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
				<ee:set-variable variableName="itemsFailed" ><![CDATA[%dw 2.0
output application/java
---
0]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="09c0bd48-84e8-40fe-82d7-d071133d7e3a" collection="#[payload]">
			<set-variable value="#[payload]" doc:name="sfResponse" doc:id="b72df200-8b77-4f5f-91a3-9f8263301530" variableName="sfResponse"/>
			<set-variable value="#[vars.itemsReprocessed as Number + 1]" doc:name="itemsReprocessed" doc:id="e5a2f26e-31f4-400c-8636-a0c11c0cfcb4" variableName="itemsReprocessed"/>
			<flow-ref doc:name="addToQueue" doc:id="aead1cf8-b505-4985-9220-899d02db1b47" name="addToQueue" />
			<flow-ref doc:name="processQueue" doc:id="cd9e6907-5caa-4d0a-b3ed-d85b4cadde03" name="processQueue" />
		</foreach>
		<ee:transform doc:name="Transform Message" doc:id="e9e1b385-9948-4a01-904f-7c802769529b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"ItemsReprocessed": vars.itemsReprocessed,
	"ItemsSucceded": vars.itemsSucceeded,
	"ItemsFailed": vars.itemsFailed
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
